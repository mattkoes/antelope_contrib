
<chapter Datascope Constants>

<subsection Dbptr Values>
<body>
A database pointer has four elements: database, table, field and record.
Each of these elements takes on a nonnegative integer value to refer to a
specific database, table, field or record, but may also take one of the
following special values:

<commands>
dbINVALID
    error indication
dbALL
    all tables, all fields, or all records
dbSCRATCH
    scratch record for a table or view
dbNULL
    null record for a table or view

<subsection Routine Flags>
<commands>
dbOUTER_JOIN
    set to force join of every record in first table 


dbSORT_UNIQUE
    set to cause the result to contain only one record for each unique set of sort key values
dbSORT_REVERSE
    reverse the sense of the sort

<subsection Dbquery Codes>
<commands>
dbSCHEMA_NAME
    schema name
dbSCHEMA_DESCRIPTION
    short description for schema
dbSCHEMA_DETAIL
    long description for schema
dbSCHEMA_DEFAULT
    return the schema used for databases lacking a descriptor file.

dbSCHEMA_TABLES
    return a Tbl list of all the relations in the schema
dbSCHEMA_FIELDS
    return a Tbl list of all the attributes in the schema
dbLINK_FIELDS
    return a Tbl list of all id attributes in the schema

dbIDSERVER
    return the name of the idserver, or 0 if not used
dbLOCKS
    returns value of DBLOCKS 
dbLASTIDS
    returns Arr array of lastid by table name, for tables with added records

dbDBPATH
    return the path along which database tables may be found
dbDATABASE_NAME
    database name
dbDATABASE_DESCRIPTION
    short description for database
dbDATABASE_DETAIL
    short description for database
dbDATABASE_FILENAME
    return the name of database descriptor file
dbDATABASE_FILES
    return array of table filenames indexed by the table name
dbDATABASE_IS_WRITABLE
    return non-zero if database was opened with permission "r+"
dbDATABASE_COUNT
    count of databases open

dbTABLE_NAME
    relation name
dbTABLE_DESCRIPTION
    short description for relation
dbTABLE_DETAIL
    short description for relation
dbTABLE_DIRNAME
    return the directory path for the table
dbTABLE_FILENAME
    return complete path for file holding table
dbTABLE_PRESENT
    return non-zero if table has at least one record
dbTABLE_SIZE
    return total size in bytes of a table
dbTABLE_FIELDS
    return a Tbl list of the fields in the table
dbTABLE_IS_WRITABLE
    return non-zero if table is writeable
dbTABLE_IS_ADDABLE
    return non-zero if locks and permissions allow adding records
dbTABLE_IS_TRANSIENT
    return non-zero if table has no actual file
dbTABLE_COUNT
    count of relations in database
dbTABLE_CREATION
    returns a dbprocess-like string which shows how the view was created
    


dbPRIMARY_KEY
    return the primary key for a table
dbALTERNATE_KEY
    return the alternate key for a table
dbFOREIGN_KEYS
    return any foreign keys in the table
dbTIMEDATE_NAME
    name of attribute automatically filled with current time when record is changed
dbUNIQUE_ID_NAME
    return name of id defined by the table, if any



dbRECORD_COUNT
    count of records in table
dbRECORD_SIZE
    return size in bytes of a record in the table



dbTABLE_IS_VIEW
    returns non-zero if table is a view
dbVIEW_TABLE_COUNT
    return the number of relations participating in the view
dbVIEW_TABLES
    return a Tbl list of tables which are present in the view
dbFIELD_BASE_TABLE
    return the base table for the field


dbFIELD_NAME
    attribute name
dbFIELD_DESCRIPTION
    short description for attribute
dbFIELD_DETAIL
    short description for attribute
dbFIELD_RANGE
    return the expression which defines the valid range of values for a field
dbFIELD_FORMAT
    return printf format string used to save attibute value into database
dbFORMAT
    returns the preferred print format for the specified field 
dbFIELD_SIZE
    return size in bytes of an attribute
dbFIELD_TYPE
    return type of an attribute: 
<List>
	dbBOOLEAN
	dbDBPTR
	dbINTEGER
	dbREAL
	dbTIME
	dbYEARDAY
	dbSTRING
</List>

dbFIELD_UNITS
    return units for an attribute (not used by Datascope)
dbFIELD_INDEX
    return the offset in bytes of a field into a record
dbFIELD_TABLES
    return a Tbl list of tables which contain the field
dbFIELD_COUNT
    count of attributes in relation


